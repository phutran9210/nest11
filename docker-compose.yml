version: '3.8'

services:
  # Main NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest11-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - DB_NAME=nest_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nest11-postgres
    environment:
      - POSTGRES_DB=nest_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: nest11-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Figma MCP Server
  figma-mcp:
    image: acuvity/mcp-server-figma:latest
    container_name: nest11-figma-mcp
    ports:
      - "3845:3845"
    environment:
      - FIGMA_API_TOKEN=${FIGMA_API_TOKEN}
      - MCP_SERVER_PORT=3845
      - TRANSPORT_TYPE=sse
      - DEBUG=figma-mcp:*
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3845/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
  redis_data: